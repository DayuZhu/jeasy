<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zkt.idis.svc.dao.db.auto.PreStoredInfoMapper">
  <resultMap id="BaseResultMap" type="com.zkt.idis.svc.model.PreStoredInfo">
    <id column="pre_stored_info_id" jdbcType="INTEGER" property="preStoredInfoId" />
    <result column="relation_id" jdbcType="INTEGER" property="relationId" />
    <result column="relation_type" jdbcType="TINYINT" property="relationType" />
    <result column="relation_type_desc" jdbcType="VARCHAR" property="relationTypeDesc" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zkt.idis.svc.model.PreStoredInfo">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pre_stored_info_id, relation_id, relation_type, relation_type_desc, title, create_time, 
    update_time, user_id, user_name
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zkt.idis.svc.model.PreStoredInfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from idis_pre_stored_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zkt.idis.svc.model.PreStoredInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from idis_pre_stored_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from idis_pre_stored_info
    where pre_stored_info_id = #{preStoredInfoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from idis_pre_stored_info
    where pre_stored_info_id = #{preStoredInfoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zkt.idis.svc.model.PreStoredInfoExample">
    delete from idis_pre_stored_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zkt.idis.svc.model.PreStoredInfo">
    <selectKey keyProperty="preStoredInfoId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into idis_pre_stored_info (relation_id, relation_type, relation_type_desc, 
      title, create_time, update_time, 
      user_id, user_name, content
      )
    values (#{relationId,jdbcType=INTEGER}, #{relationType,jdbcType=TINYINT}, #{relationTypeDesc,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zkt.idis.svc.model.PreStoredInfo">
    <selectKey keyProperty="preStoredInfoId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into idis_pre_stored_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="relationId != null">
        relation_id,
      </if>
      <if test="relationType != null">
        relation_type,
      </if>
      <if test="relationTypeDesc != null">
        relation_type_desc,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="relationId != null">
        #{relationId,jdbcType=INTEGER},
      </if>
      <if test="relationType != null">
        #{relationType,jdbcType=TINYINT},
      </if>
      <if test="relationTypeDesc != null">
        #{relationTypeDesc,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zkt.idis.svc.model.PreStoredInfoExample" resultType="java.lang.Long">
    select count(*) from idis_pre_stored_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update idis_pre_stored_info
    <set>
      <if test="record.preStoredInfoId != null">
        pre_stored_info_id = #{record.preStoredInfoId,jdbcType=INTEGER},
      </if>
      <if test="record.relationId != null">
        relation_id = #{record.relationId,jdbcType=INTEGER},
      </if>
      <if test="record.relationType != null">
        relation_type = #{record.relationType,jdbcType=TINYINT},
      </if>
      <if test="record.relationTypeDesc != null">
        relation_type_desc = #{record.relationTypeDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update idis_pre_stored_info
    set pre_stored_info_id = #{record.preStoredInfoId,jdbcType=INTEGER},
      relation_id = #{record.relationId,jdbcType=INTEGER},
      relation_type = #{record.relationType,jdbcType=TINYINT},
      relation_type_desc = #{record.relationTypeDesc,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update idis_pre_stored_info
    set pre_stored_info_id = #{record.preStoredInfoId,jdbcType=INTEGER},
      relation_id = #{record.relationId,jdbcType=INTEGER},
      relation_type = #{record.relationType,jdbcType=TINYINT},
      relation_type_desc = #{record.relationTypeDesc,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zkt.idis.svc.model.PreStoredInfo">
    update idis_pre_stored_info
    <set>
      <if test="relationId != null">
        relation_id = #{relationId,jdbcType=INTEGER},
      </if>
      <if test="relationType != null">
        relation_type = #{relationType,jdbcType=TINYINT},
      </if>
      <if test="relationTypeDesc != null">
        relation_type_desc = #{relationTypeDesc,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where pre_stored_info_id = #{preStoredInfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zkt.idis.svc.model.PreStoredInfo">
    update idis_pre_stored_info
    set relation_id = #{relationId,jdbcType=INTEGER},
      relation_type = #{relationType,jdbcType=TINYINT},
      relation_type_desc = #{relationTypeDesc,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where pre_stored_info_id = #{preStoredInfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zkt.idis.svc.model.PreStoredInfo">
    update idis_pre_stored_info
    set relation_id = #{relationId,jdbcType=INTEGER},
      relation_type = #{relationType,jdbcType=TINYINT},
      relation_type_desc = #{relationTypeDesc,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR}
    where pre_stored_info_id = #{preStoredInfoId,jdbcType=INTEGER}
  </update>
</mapper>